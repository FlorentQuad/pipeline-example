apiVersion: v1
items:
- apiVersion: tekton.dev/v1beta1
  kind: Pipeline
  metadata:
    labels:
      template: pipeline-rvig
    name: rvig
  spec:
    finally:
    - name: final
      taskSpec:
        steps:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          script: |
            #!/usr/bin/env bash

            echo "Everything Finished"
    params:
    - name: git-url
      type: string
    - name: git-branch
      type: string
    tasks:
    - name: fetch-repo
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.git-branch)
      - name: crtFileName
        value: ssh-privatekey
      taskRef:
        name: git-clone
      workspaces:
      - name: output
        workspace: code-clone
      - name: ssl-ca-directory
        workspace: ssl-creds
    - name: gemeentes-simulator
      runAfter:
      - fetch-repo
      taskSpec:
        steps:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          name: test
          script: |
            #!/usr/bin/env bash
            echo "---- Run Tests  ----"

            echo "=== DUMMY TEST ==="
            echo "=================="
            echo "=================="
            echo "=================="
            echo "=================="
            echo "= END DUMMY TEST ="

            echo "---- Finished Tests ----"
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          name: build
          script: |
            #!/usr/bin/env bash
            echo "---- Trigger Build: gemeentes-simulator  ----"
            # oc start-build bc/gemeentes-simulator
            echo "---- Finished Build ----"
      workspaces:
      - name: source
        workspace: code-clone
    - name: rdw-frontend
      runAfter:
      - fetch-repo
      taskSpec:
        steps:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          name: test
          script: |
            #!/usr/bin/env bash
            echo "---- Run Tests  ----"

            echo "=== DUMMY TEST ==="
            echo "=================="
            echo "=================="
            echo "=================="
            echo "=================="
            echo "= END DUMMY TEST ="

            echo "---- Finished Tests ----"
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          name: build
          script: |
            #!/usr/bin/env bash
            echo "---- Trigger Build: rdw-frontend  ----"
            oc start-build bc/rdw-frontend --build-arg ENDPOINT="https://$(oc get route/gemeentes-simulator -o=go-template="{{ .spec.host  }}")/api/v1"
            echo "---- Finished Build ----"
      workspaces:
      - name: source
        workspace: code-clone
    - name: mijn-overheid
      runAfter:
      - fetch-repo
      taskSpec:
        steps:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          name: test
          script: |
            #!/usr/bin/env bash
            echo "---- Run Tests  ----"

            echo "=== DUMMY TEST ==="
            echo "=================="
            echo "=================="
            echo "=================="
            echo "=================="
            echo "= END DUMMY TEST ="

            echo "---- Finished Tests ----"
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          name: build
          script: |
            #!/usr/bin/env bash
            echo "---- Trigger Build: mijn-overheid  ----"
            # oc start-build bc/mijn-overheid
            echo "---- Finished Build ----"
      workspaces:
      - name: source
        workspace: code-clone
    - name: rvig-message-system
      runAfter:
      - fetch-repo
      taskSpec:
        steps:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          name: test
          script: |
            #!/usr/bin/env bash
            echo "---- Run Tests  ----"

            echo "=== DUMMY TEST ==="
            echo "=================="
            echo "=================="
            echo "=================="
            echo "=================="
            echo "= END DUMMY TEST ="

            echo "---- Finished Tests ----"
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          name: build
          script: |
            #!/usr/bin/env bash
            echo "---- Trigger Build: rvig-message-system  ----"
            # oc start-build bc/rvig-message-system
            echo "---- Finished Build ----"
      workspaces:
      - name: source
        workspace: code-clone
    workspaces:
    - name: code-clone
    - name: ssl-creds
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      template: pipeline-rvig
    name: build-bot
  secrets:
  - name: quad-gh-secret
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      template: pipeline-rvig
    name: role-build-bot
    namespace: meijerflorent-dev
  rules:
  - apiGroups:
    - build.openshift.io
    resources:
    - buildconfigs
    verbs:
    - create
  - apiGroups:
    - route.openshift.io
    resources:
    - routes
    verbs:
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      template: pipeline-rvig
    name: rolebinding-build-bot
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - kind: ServiceAccount
    name: build-bot
    namespace: meijerflorent-dev
- apiVersion: triggers.tekton.dev/v1beta1
  kind: TriggerBinding
  metadata:
    labels:
      template: pipeline-rvig
    name: rvig-trigger-binding
  spec:
    params:
    - name: git-repo-url
      value: $(body.repository.url)
    - name: git-revision
      value: $(body.head_commit.id)
- apiVersion: triggers.tekton.dev/v1beta1
  kind: TriggerTemplate
  metadata:
    labels:
      template: pipeline-rvig
    name: rvig-trigger-template
  spec:
    params:
    - name: git-repo-url
    - name: git-revision
    resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: pipeline-run-
      spec:
        params:
        - name: git-url
          value: git@github.com:quad-teams/RvIG-berichtendienst.git
        - name: git-branch
          value: openshift-deploy
        pipelineRef:
          name: rvig
        podTemplate:
          securityContext:
            fsGroup: 65532
            runAsUser: 1001
        serviceAccountName: build-bot
        workspaces:
        - name: code-clone
          volumeClaimTemplate:
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
        - name: ssl-creds
          secret:
            secretName: quad-gh-secret
- apiVersion: triggers.tekton.dev/v1beta1
  kind: Trigger
  metadata:
    labels:
      template: pipeline-rvig
    name: rvig-trigger
  spec:
    bindings:
    - ref: rvig-trigger-binding
    interceptors:
    - params:
      - name: secretRef
        value:
          secretKey: secretToken
          secretName: github-secret-webhook
      - name: eventTypes
        value:
        - push
      ref:
        name: github
    - params:
      - name: filter
        value: body.ref == 'refs/heads/demo-webhook'
      ref:
        name: cel
    serviceAccountName: pipeline
    template:
      ref: rvig-trigger-template
- apiVersion: triggers.tekton.dev/v1beta1
  kind: EventListener
  metadata:
    labels:
      template: pipeline-rvig
    name: rvig-eventlistener
  spec:
    serviceAccountName: pipeline
    triggers:
    - triggerRef: rvig-trigger
- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      template: pipeline-rvig
    name: github-secret-webhook
  stringData:
    secretToken: QUADSolutions
  type: Opaque
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      template: pipeline-rvig
    name: el-rvig-eventlistener-route
  spec:
    port:
      targetPort: http-listener
    tls:
      insecureEdgeTerminationPolicy: None
      termination: edge
    to:
      kind: Service
      name: el-rvig-eventlistener
      weight: 100
    wildcardPolicy: None
kind: List
metadata: {}
